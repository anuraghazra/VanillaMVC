{"version":3,"sources":["src/Controller.js","src/Model.js","src/View.js","app.js"],"names":["Controller","model","renderers","renderer","push","onUpdate","event","bindEvents","startsWith","actionName","slice","replace","v","toLowerCase","addObserver","Model","state","actions","observers","action","o","notify","Error","constructor","name","noop","View","rootId","view","root","getElement","refs","bind","append","dom","e","tag","props","elm","document","createElement","propName","children","forEach","child","appendChild","selector","querySelector","TodosModel","todos","id","addTodo","todoName","length","notifyObservers","removeTodo","todoId","filter","todo","ToggleModel","isOpen","toggle","todoList","innerHTML","p","li","createVDOM","textContent","className","onAddTodo","form","addEventListener","preventDefault","input","value","onRemoveTodo","target","parseInt","parentElement","consoleRenderer","console","clear","log","toggleWrapper","t","onToggle","toggleInput","app","addRenderer","init","window"],"mappings":";;AGCA;;AACA;;AACA;;;;;;;ADHA,IAAMyB,IAAI,GAAG,SAAPA,IAAO,GAAM,CAAE,CAArB;;IAEMC;ACGN,ADFE,kBAMQ;AAAA,mFAAJ,EAAI;AAAA,QALNC,MAKM,QALNA,MAKM;AAAA,IFTJ3B,ACCAe,qBCIFa,IAIM;AFRR,ACCA,ACOQ,QAJNA,IAIM,UFRI3B,CCCoB,IDDhC,EAAmB,SEIVwB,IAID;AFRW,ACCa,ACOxB,QDPMT,ACIZf,KDJ8B,ACOxB,QDPMe,ACIZf,KDJ8B,ACOxB;ADPwB,ACOxB,QDPagB,OAAW,QAAXA,OAAW,CCK9BV,UAEM;AFPN,AEOM,QAFNA,CFLKL,SAAL,AEOM,GFPW,EAAjB,2BEKa,EAEP;AFNN,ACD8B,ACOxB,SFNDD,KAAL,GAAaA,KAAb,OEKAI,QACM;ACMV,AHXG,AEKO,QADNA,QACM,8BADKoB,IACL;ACQV,AFdI,IEcAuB,KFdKhC,KEcK,AFdV,GEca,AFdAA,IEcID,CFdjB,aEca,CAAU;AACzBC,AFdE,ACKM,ECSRA,KAAK,EAAE,AFdAE,SAAL,GAAiB,EAAjB;AEeA+B,IAAAA,KAAK,EAAE,CACL;AAAEC,AFdJ,ACIA,MCUIA,EAAE,CFdD,ACIArB,CCUG,CAAN,EFdSV,ACIX,GAAY,GDJZ,ECIiBW,EDJIb,OAArB,CCIY,CFJFd,ACAoB,ACIFwB,MAAhB,CAAZ,GFJoB;AGcTH,AHbX,ACAE,ACIF,MCSWA,GDTNO,CCSU,CHbV7B,ACAEiB,CEaU,CDTjB,GAAY,CDJV,CCIF,EFJA,CAAef,ACAEa,IDAjB,CAAoBd,ECAI,CAACgB,KDAzB,CCAwB,CAAtB;AEaA,AHZH,ACAE,ACKD,KCMO,EAEL,EDRGlB,KAAL,GAAaA,KAAb;ACQIiD,AFZL,ACKC,MCOIA,EAAE,CDPD7C,CCOG,CAAN,MDPF,GAAgBA,QAAQ,CAAC2B,IAAT,CAAc,IAAd,CAAhB;ACOWR,ADLX,MCKWA,GDLNI,CCKU,EAAE,CDLjB,GAAYA,IAAI,CAACI,IAAL,CAAU,IAAV,GAAZ;ACKE,ADHF,KCCO,EAGL,EDJGH,IAAL,IAAa,KAAKA,IAAL,CFRR,AEQkBI,MAAV,CAAiB,KAAKL,IAAL,CAAUM,GAA3B,CAAb;ACIIgB,AHZC,AEUL,MCEIA,EAAE,CDFD3C,CCEG,CAAN,QDFF,GAAkBA,UAAlB,iBFTqB,KAAKL,SADrB;AGYMsB,AHZN,MGYMA,IAAI,EAAE,oBFXPJ,GAAG;AEWX,AFVF,ACSA,KCFO,IDEF,EDTAF,ECSMiB,CAAX,IAAgB,EDThB,CAAe/B,ECSMG,EDTrB,CAAoBa,CAApB,MCSA,EAAiC;ACH5B,AHRA,ACGN,ACSG,GCLqB,QDKhBb,UAAL,CAAgB4B,CAAhB,IAAqB,KAAK5B,UAAL,CAAgB4B,CAAhB,EAAmBH,IAAnB,CAAwB,IAAxB,CAArB;ACGJf,AHdE,AEYC,ECEHA,OAAO,EAAE,iDHd8B;AGerCkC,AHfqC,AEatC,ICECA,OADO,GHdEhD,QAA4B,QGe7BiD,QADD,EACW;AAChB,AHfAjD,UGeI+C,AHfJ/C,EGeM,GACJ,GHhBM,CAACE,CGgBFW,KAAL,CAAWiC,CHhBb,CAAkB9C,GGgBhB,CAAiBkD,IHhBO,CAACpD,CGgBzB,AFbY,GEac,CAA1B,AHhBF,GGiBM,KAAKe,KAAL,CAAWiC,KAAX,CAAiB,KAAKjC,KAAL,CAAWiC,KAAX,CAAiBI,MAAjB,GAA0B,CAA3C,EAA8CH,EAA9C,GAAmD,CADvD,GAEI,CAHN;AAIA,AFhBc,WEgBTlC,KAAL,CAAWiC,KAAX,CAAiB7C,IAAjB,CAAsB,qBFfV,KAAKc,SADH;AEiBZM,AHlBF,ACCc,QEiBZA,IAAI,EAAE4B,CHlBH,IAAI9C,GGiBa,EHjBtB,IAAkBH,QAAQ,CAACI,UAA3B,EAAuC;AGmBrC2C,AHlBA,QGkBAA,EAAE,EAAFA,IHlBI5C,KAAK,CAACE,KEWTP,KFXG,CAAiB,CEWb,GFXJ,CAAJ,EAA4B;AGgBR,AHflB,ACDU,ACYhB,OCIE,IDJGI,OFXKI,CEWV,CAAcR,KAAd,GFXoB,GAAGK,KAAK,CAACI,KAAN,CAAY,CAAZ,EAAeC,OAAf,CAAuB,KAAvB,EAA8B,UAACC,CAAD;AGmBnD,AHnBmD,ACArD,ACYD,WCOQ0C,YHnBqD1C,CAAC,CAACC,CGmB5D,UHnB0D,EAAP,sBCAvB;AEoB7B,AHpBoD,ACAvB,KESvB,SFTEO,CDAc,ACAO,CDAxB;AGqBNmC,AHpBMpD,ACAJ,IEoBFoD,UAZO,AHRDpD,ACAA,CAACiB,CAAC,CAACC,KDAK,CAACd,ACAb,EAAe,MAAM,EDAjB,CAAoBD,CCACgB,CEoBhBkC,GHpBL,CCAiB,CDAUrD,CGQ1B,EAYY,KHpBsB,CAACF,KAAT,CAAeQ,KCC/BW,CAAC,CAACG,GDDc,CAA3B,OCCW,CAAcC,IADR,qGAAN;AEqBf,AHpBG,ACGHJ,UAAAA,CEiBKJ,AFjBJ,CAACK,IEiBF,CAAW4B,CFjBX,CAAS,GEiBT,CFjBA,EEiBmB,KAAKjC,CDRjBoB,ICQY,CAAWa,ADRlBZ,KCQO,CAAiBoB,CDRJ,KCQb,CAAwB,UAAAC,IAAI;AAAA,AHnB9C,ACGF,ACSD,UAAIpB,GAAG,ECO8CoB,CDP3CnB,GCO+C,CAACW,EAAL,EDPnC,CAACV,ECO8CgB,MAAhB,KDPvC,CAAuBpB,GAAvB,CAAV;ACOiD,AFvBjC,OEuBK,CAAnB;AACA,AHnBAjC,ACLc,ACkBhB,UFbEA,CGmBKmD,ADNF,IAAMb,GFbD,CAACxC,IEaX,CFbE,CAAea,CGmBf,CDNqBuB,KAAvB,EAA8B,EFb5B,CAA2BlC,QAA3B;AGoBD,AHnBA,ACNe,ACmBd,YAAIsC,QAAQ,KAAK,KAAjB,EAAwB;ACTnB,AHfF,ACKW,ACoBZ,eAAKV,IAAL,CAAUM,KAAK,CAACI,QAAD,CAAf,IAA6BH,GAA7B;AClBmB,AHPlB,ACKW,ACqBZ,CCnBS,CAAjB;AA2BA,AHlCS,ACaN,ACcI,ICOHqB,WAAW,GAAG,IAAI5C,cAAJ,CAAU;AAC1BC,AHnCO,EGmCPA,KAAK,EAAE;AACL4C,AHpCK,AE4BHtB,ICQFsB,IDREtB,ECQI,CDRD,CCQG,ADRFG,QAAD,CAAH,GAAgBJ,KAAK,CAACI,QAAD,CAArB;ACOG,AHvBN,AEiBE,GCKuB;AAI1BxB,EAAAA,OAAO,EAAE;AACP4C,ADnBkC,ICmBlCA,MADO,oBACE,UDnBenB,QAAU;ACoBhC,ADpBsBA,QAAAA,GCoBjB1B,IFvBID,CEuBT,ADpBgC,CCoBrB6C,MAAX,GAAoB,CAAC,KAAK5C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","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["class Controller {\r\n  constructor(model) {\r\n    this.renderers = [];\r\n    this.model = model;\r\n  }\r\n\r\n  addRenderer(renderer) {\r\n    this.renderers.push(renderer)\r\n  }\r\n\r\n  init() {\r\n    for (let renderer of this.renderers) {\r\n      renderer.onUpdate(renderer.model);\r\n\r\n      for (let event in renderer.bindEvents) {\r\n        if (event.startsWith('on')) {\r\n          let actionName = event.slice(2).replace(/^\\w/, (v) => v.toLowerCase())\r\n          renderer.bindEvents[event](renderer.model[actionName]);\r\n        }\r\n      }\r\n      renderer.model.addObserver(renderer);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Controller;","\r\nclass Model {\r\n  constructor({ state, actions }) {\r\n    this.state = state;\r\n    this.observers = [];\r\n\r\n    for (const action in actions) {\r\n      this[action] = actions[action];\r\n    }\r\n  }\r\n\r\n  addObserver(o) {\r\n    this.observers.push(o)\r\n  }\r\n\r\n  notifyObservers() {\r\n    for (let o of this.observers) {\r\n      if (!o.notify) throw new Error(\r\n        `Observer: ${o.constructor.name} has no notify() method,\r\n        Make sure you have a notify method before adding the observer`\r\n      )\r\n      o.notify(this);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default Model;","const noop = () => {};\r\n\r\nclass View {\r\n  constructor({\r\n    rootId,\r\n    view = noop,\r\n    model,\r\n    bindEvents = {},\r\n    onUpdate = noop,\r\n  } = {}) {\r\n    this.root = this.getElement(rootId);\r\n    this.refs = {};\r\n\r\n    this.model = model;\r\n    this.onUpdate = onUpdate.bind(this);\r\n\r\n    this.view = view.bind(this)();\r\n\r\n    this.root && this.root.append(this.view.dom);\r\n\r\n    this.bindEvents = bindEvents;\r\n    for (const e in this.bindEvents) {\r\n      this.bindEvents[e] = this.bindEvents[e].bind(this);\r\n    }\r\n  }\r\n\r\n  notify(model) {\r\n    this.onUpdate(model);\r\n  }\r\n\r\n  createVDOM(tag, props, ...children) {\r\n    let elm = document.createElement(tag);\r\n\r\n    for (const propName in props) {\r\n      if (propName === \"ref\") {\r\n        this.refs[props[propName]] = elm;\r\n        continue;\r\n      }\r\n      elm[propName] = props[propName];\r\n    }\r\n\r\n    if (children) {\r\n      children.forEach((child) => {\r\n        elm.appendChild(child.dom);\r\n      });\r\n    }\r\n\r\n    return { dom: elm, tag, props, children };\r\n  }\r\n\r\n  getElement(selector) {\r\n    return document.querySelector(selector);\r\n  }\r\n}\r\n\r\nexport default View;\r\n","/** @jsx this.createVDOM */\r\nimport Controller from './src/Controller'\r\nimport Model from './src/Model'\r\nimport View from './src/View'\r\n\r\n/**\r\n * \r\n * Just a simple MVC architecture with the concept of vanillajs \r\n * (no magical stuffs)\r\n * \r\n * => Model (have the data) => View (Renders the model) => Controller (Joins both)\r\n * => View dispatches events (vanillajs events) => model updates the data \r\n * \r\n */\r\n\r\n// ->>> MODELS\r\n\r\nlet TodosModel = new Model({\r\n  state: {\r\n    todos: [\r\n      { id: 1, name: 'Do work' },\r\n      { id: 2, name: 'Do Nothing' },\r\n      { id: 3, name: 'Do Everything' }\r\n    ]\r\n  },\r\n  actions: {\r\n    addTodo(todoName) {\r\n      let id =\r\n        this.state.todos.length > 1\r\n          ? this.state.todos[this.state.todos.length - 1].id + 1\r\n          : 1;\r\n      this.state.todos.push({\r\n        name: todoName,\r\n        id\r\n      });\r\n      this.notifyObservers()\r\n    },\r\n    removeTodo(todoId) {\r\n      this.state.todos = this.state.todos.filter(todo => todo.id !== todoId);\r\n      this.notifyObservers()\r\n    }\r\n  }\r\n});\r\n\r\nlet ToggleModel = new Model({\r\n  state: {\r\n    isOpen: false\r\n  },\r\n  actions: {\r\n    toggle() {\r\n      this.state.isOpen = !this.state.isOpen\r\n      this.notifyObservers()\r\n    },\r\n  }\r\n});\r\n\r\n\r\n// ->>> VIEWS\r\n\r\nlet todos = new View({\r\n  rootId: '#root',\r\n  model: TodosModel,\r\n  view() {\r\n    return (\r\n      <div>\r\n        <h2 textContent=\"Todos\" />\r\n        <p textContent=\"Open console!\" />\r\n        <form ref=\"form\">\r\n          <input ref=\"input\" type=\"text\" name=\"todo\" placeholder=\"Add todo\" />\r\n          <button ref=\"button\" type=\"submit\" textContent=\"Add\" />\r\n          <ul ref=\"todoList\" />\r\n        </form>\r\n      </div>\r\n    )\r\n  },\r\n  onUpdate({ state }) {\r\n    let { todoList } = this.refs;\r\n    todoList.innerHTML = '';\r\n\r\n    if (state.todos.length <= 0) {\r\n      const p = <p textContent=\"Empty\"></p>\r\n      todoList.append(p.dom);\r\n      return;\r\n    }\r\n\r\n    state.todos.forEach(todo => {\r\n      let li = this.createVDOM(\r\n        'li',\r\n        { textContent: todo.name, id: todo.id },\r\n        this.createVDOM(\r\n          'button',\r\n          { textContent: 'Delete', className: 'remove' }\r\n        )\r\n      )\r\n      todoList.append(li.dom);\r\n    })\r\n  },\r\n  bindEvents: {\r\n    onAddTodo() {\r\n      this.refs.form.addEventListener('submit', (e) => {\r\n        e.preventDefault();\r\n\r\n        let input = this.refs.input;\r\n        if (input.value) {\r\n          this.model.addTodo(input.value)\r\n          input.value = ''\r\n        }\r\n      })\r\n    },\r\n    onRemoveTodo() {\r\n      this.refs.todoList.addEventListener('click', (e) => {\r\n        if (e.target.className !== 'remove') return;\r\n\r\n        let todoId = parseInt(e.target.parentElement.id)\r\n        this.model.removeTodo(todoId);\r\n      })\r\n    }\r\n  }\r\n});\r\n\r\nconst consoleRenderer = new View({\r\n  model: TodosModel,\r\n  onUpdate(model) {\r\n    console.clear();\r\n    console.log('TODOS')\r\n    if (model.state.todos.length < 1) console.log('Empty')\r\n    for (let todo of model.state.todos) {\r\n      console.log(todo)\r\n    }\r\n  }\r\n});\r\n\r\nconst toggle = new View({\r\n  rootId: \"#root\",\r\n  model: ToggleModel,\r\n  view() {\r\n    return (\r\n      <div>\r\n        <h2 textContent=\"Toggle\" />\r\n        <label>\r\n          <span textContent=\"Toggle input\"></span>\r\n          <input ref=\"toggleInput\" type=\"checkbox\" />\r\n        </label>\r\n        <div ref=\"toggleWrapper\"></div>\r\n      </div>\r\n    )\r\n  },\r\n  onUpdate(model) {\r\n    let { toggleWrapper } = this.refs;\r\n    toggleWrapper.innerHTML = '';\r\n    let t = this.createVDOM('p', { textContent: model.state.isOpen ? \"It's open\" : \"It's closed\" });\r\n    toggleWrapper.append(t.dom);\r\n  },\r\n  bindEvents: {\r\n    onToggle() {\r\n      this.refs.toggleInput.addEventListener('click', (e) => {\r\n        this.model.toggle();\r\n      })\r\n    }\r\n  }\r\n});\r\n\r\n\r\nconst app = new Controller();\r\napp.addRenderer(todos);\r\napp.addRenderer(toggle);\r\napp.addRenderer(consoleRenderer);\r\n\r\napp.init();\r\n\r\nwindow.app = app"]}